{
  "graph": {
    "nodes": {
      "jwt-authentication-for-wp-rest-api": {
        "name": "jwt-authentication-for-wp-rest-api",
        "type": "lib",
        "data": {
          "root": "packages/jwt-authentication-for-wp-rest-api",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/jwt-authentication-for-wp-rest-api",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "^build"
              ],
              "options": {
                "cwd": "packages/jwt-authentication-for-wp-rest-api",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects jwt-authentication-for-wp-rest-api --includeDependentProjects -- npx nx build-deps jwt-authentication-for-wp-rest-api"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/jwt-authentication-for-wp-rest-api",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/jwt-authentication-for-wp-rest-api/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/jwt-authentication-for-wp-rest-api",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/vitest/coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "description": "JWT Authentication for WP REST API",
            "js": {
              "packageName": "@store-sdk/jwt-authentication-for-wp-rest-api",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "jwt-authentication-for-wp-rest-api",
          "tags": [
            "npm:public",
            "npm:woocommerce",
            "npm:sdk",
            "npm:store-api",
            "npm:typescript"
          ],
          "implicitDependencies": []
        }
      },
      "example-angular-shop": {
        "name": "example-angular-shop",
        "type": "app",
        "data": {
          "root": "apps/example-angular-shop",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/example-angular-shop",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/jest.config.ts",
                "!{projectRoot}/src/test-setup.ts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts",
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts.map",
                "{workspaceRoot}/dist/out-tsc/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@angular/build:application",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/example-angular-shop",
                "browser": "apps/example-angular-shop/src/main.ts",
                "polyfills": [
                  "zone.js"
                ],
                "tsConfig": "apps/example-angular-shop/tsconfig.app.json",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "apps/example-angular-shop/public"
                  }
                ],
                "styles": [
                  "apps/example-angular-shop/src/styles.css"
                ]
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "500kb",
                      "maximumError": "1mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "4kb",
                      "maximumError": "8kb"
                    }
                  ],
                  "outputHashing": "all"
                },
                "development": {
                  "optimization": false,
                  "extractLicenses": false,
                  "sourceMap": true,
                  "fileReplacements": [
                    {
                      "replace": "apps/example-angular-shop/src/environments/environment.ts",
                      "with": "apps/example-angular-shop/src/environments/environment.development.ts"
                    }
                  ]
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "executor": "@angular/build:dev-server",
              "configurations": {
                "production": {
                  "buildTarget": "example-angular-shop:build:production"
                },
                "development": {
                  "buildTarget": "example-angular-shop:build:development"
                }
              },
              "options": {
                "proxyConfig": "proxy.conf.json"
              },
              "defaultConfiguration": "development",
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@angular/build:extract-i18n",
              "options": {
                "buildTarget": "example-angular-shop:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "example-angular-shop:build",
                "port": 4301,
                "staticFilePath": "dist/apps/example-angular-shop/browser",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "example-angular-shop",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "prefix": "app",
          "sourceRoot": "apps/example-angular-shop/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "simple-jwt-login": {
        "name": "simple-jwt-login",
        "type": "lib",
        "data": {
          "root": "packages/simple-jwt-login",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/simple-jwt-login",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "^build"
              ],
              "options": {
                "cwd": "packages/simple-jwt-login",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/src/lib/types/jwt..typets",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects simple-jwt-login --includeDependentProjects -- npx nx build-deps simple-jwt-login"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/simple-jwt-login",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/simple-jwt-login/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/simple-jwt-login",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/vitest/coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@store-sdk/simple-jwt-login",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "simple-jwt-login",
          "tags": [
            "npm:public"
          ],
          "implicitDependencies": []
        }
      },
      "hippoo": {
        "name": "hippoo",
        "type": "lib",
        "data": {
          "root": "packages/hippoo",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/hippoo",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "^build"
              ],
              "options": {
                "cwd": "packages/hippoo",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects hippoo --includeDependentProjects -- npx nx build-deps hippoo"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/hippoo",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/hippoo/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/hippoo",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/vitest/coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "description": "JWT Authentication for WP REST API",
            "js": {
              "packageName": "@store-sdk/hippoo",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "hippoo",
          "tags": [
            "npm:public",
            "npm:woocommerce",
            "npm:sdk",
            "npm:store-api",
            "npm:typescript"
          ],
          "implicitDependencies": []
        }
      },
      "core": {
        "name": "core",
        "type": "lib",
        "data": {
          "root": "packages/core",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts.map",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript",
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": [
                "^build"
              ],
              "options": {
                "cwd": "packages/core",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.lib.json",
                "{projectRoot}/src/**/*.ts",
                "!{projectRoot}/vite.config.ts",
                "!{projectRoot}/vite.config.mts",
                "!{projectRoot}/vitest.config.ts",
                "!{projectRoot}/vitest.config.mts",
                "!{projectRoot}/src/**/*.test.ts",
                "!{projectRoot}/src/**/*.spec.ts",
                "!{projectRoot}/src/**/*.test.tsx",
                "!{projectRoot}/src/**/*.spec.tsx",
                "!{projectRoot}/src/**/*.test.js",
                "!{projectRoot}/src/**/*.spec.js",
                "!{projectRoot}/src/**/*.test.jsx",
                "!{projectRoot}/src/**/*.spec.jsx",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "npx tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "npx nx watch --projects core --includeDependentProjects -- npx nx build-deps core"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/core",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/packages/core/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/core",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "vitest"
                  ]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/vitest/coverage"
              ],
              "metadata": {
                "technologies": [
                  "vite"
                ],
                "description": "Run Vite tests",
                "help": {
                  "command": "npx vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "description": "TypeScript-first SDK for integrating with the WooCommerce Store API",
            "js": {
              "packageName": "@store-sdk/core",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "name": "core",
          "tags": [
            "npm:public",
            "npm:woocommerce",
            "npm:sdk",
            "npm:store-api",
            "npm:typescript"
          ],
          "implicitDependencies": []
        }
      },
      "@store-sdk/source": {
        "name": "@store-sdk/source",
        "type": "app",
        "data": {
          "root": ".",
          "name": "@store-sdk/source",
          "includedScripts": [],
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@store-sdk/source",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "jwt-authentication-for-wp-rest-api": [
        {
          "source": "jwt-authentication-for-wp-rest-api",
          "target": "core",
          "type": "static"
        }
      ],
      "example-angular-shop": [
        {
          "source": "example-angular-shop",
          "target": "core",
          "type": "static"
        },
        {
          "source": "example-angular-shop",
          "target": "simple-jwt-login",
          "type": "static"
        }
      ],
      "simple-jwt-login": [
        {
          "source": "simple-jwt-login",
          "target": "core",
          "type": "static"
        }
      ],
      "hippoo": [
        {
          "source": "hippoo",
          "target": "core",
          "type": "static"
        }
      ],
      "core": [],
      "@store-sdk/source": []
    }
  }
}