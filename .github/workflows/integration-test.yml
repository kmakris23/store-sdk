name: integration-tests

on:
  workflow_dispatch: {}
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps
        run: npm install
      - name: Start WordPress environment (foreground setup)
        run: |
          npm run wp:env:up:detached
          # Wait for REST API
          n=0
          until curl -fsS http://localhost:8080/wp-json/ > /dev/null; do
            n=$((n+1)); if [ $n -gt 60 ]; then echo 'WP not responding' >&2; docker compose -f infra/wordpress/docker-compose.yml logs wp; exit 1; fi
            echo "Waiting for WordPress ($n)"; sleep 2;
          done
          # Run setup script explicitly (idempotent) to ensure config/seeding applied
          docker compose -f infra/wordpress/docker-compose.yml run --rm wpcli wp option delete store_sdk_wc_configured || true
          docker compose -f infra/wordpress/docker-compose.yml run --rm wpcli bash /scripts/wp-setup.sh
      - name: Verify payment gateway & seeded data
        run: |
          docker compose -f infra/wordpress/docker-compose.yml run --rm wpcli wp option get woocommerce_cod_settings
          docker compose -f infra/wordpress/docker-compose.yml run --rm wpcli wp option get store_sdk_seeded
          curl -fsS http://localhost:8080/wp-json/wc/store/v1/products?per_page=1 | head -c 500
      - name: Build SDK
        run: npx nx run-many -t build
      - name: Unit Tests
        run: npx nx run-many -t test
      - name: Lint
        run: npx nx run-many -t lint
      - name: Teardown WP (optional)
        if: always()
        run: docker compose -f infra/wordpress/docker-compose.yml down -v --remove-orphans
